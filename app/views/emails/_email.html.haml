- truncated = h(truncate(email.body_without_textile.to_s.gsub("\n", " "), :length => 125 - email.subject.to_s.size))
- formatted = email.body.dup.force_encoding(Encoding::UTF_8)

%li.mail{ highlightable(dom_id(email, :tools), :off => "#f2f2f2"), :id => dom_id(email) }
  .body
    = link_to avatar_for(email.user, :size => "25x25"), user_path(email.user)
    .tools{ invisible, :id => dom_id(email, :tools) }
      = link_to_delete(email)

    %tt
      - if email.sent_to.to_s.include?(", ")
        = "#{t(:to)}: ".html_safe << email.sent_to
      - else
        = "#{t(:to)}: ".html_safe << link_to_email(email.sent_to)
      = "#{t(:from_small)}: ".html_safe << link_to_email(email.sent_from) << ", #{t(:sent_on)} ".html_safe
      = l(email.sent_at, :format => :mmddhhss)
      = " | ".html_safe + link_to_function(email.collapsed? ? t(:more) : t(:less), "crm.flip_note_or_email(this, '#{t(:more)}', '#{t(:less)}')", :class => "toggle")

    %dt{ hidden_if(email.expanded?), :id => dom_id(email, :truncated) }
      %p
        = h(email.subject)
        %tt= " - ".html_safe << truncated
    %dt.textile{ hidden_if(email.collapsed?), :id => dom_id(email, :formatted) }
      .email_content
        %p= h(email.subject)
        = auto_link(formatted)

